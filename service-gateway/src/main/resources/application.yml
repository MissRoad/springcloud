server:
  port: 8009
spring:
  application:
    name: service-gateway
  cloud:
    gateway:
      routes:
#  id：我们自定义的路由 ID，保持唯一
#  uri：目标服务地址
#  predicates：路由条件，Predicate 接受一个输入参数，返回一个布尔值结果。该接口包含多种默认方法来将 Predicate 组合成其他复杂的逻辑（比如：与，或，非）。
#  filters：过滤规则，本示例暂时没用。
      - id: first_route
        uri: http://freezone.fun
        predicates:
        filters:
          - name: RequestRateLimiter
            args:
#              允许用户每秒处理多少个请求
              redis-rate-limiter.replenishRate: 10
#              令牌桶的容量，允许在一秒钟内完成的最大请求数
              redis-rate-limiter.burstCapacity: 20
#              使用 SpEL 按名称引用 bean
              key-resolver: "#{@userKeyResolver}"
        - Path=/zone
        - After=2019-06-06T10:12:47.789+08:00[Asia/Shanghai]
      discovery:
        locator:
# 是否与服务注册于发现组件进行结合，通过 serviceId 转发到具体的服务实例。默认为 false，设为 true 便开启通过服务中心的自动根据 serviceId 创建路由的功能。
          enabled: true
  redis:
    host: 119.23.255.144
    password: p@ssw0rd
    port: 6379
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8001/eureka/

logging:
  level:
    org.springframework.cloud.gateway: debug
